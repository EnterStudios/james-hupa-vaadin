package org.apache.hupa.vaadin.ui;

import org.apache.hupa.vaadin.actions.LoginActivity.LoginDisplay;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

@SuppressWarnings("serial")
public class HupaLoginScreen extends CustomComponent implements LoginDisplay {

    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

    @AutoGenerated
    private AbsoluteLayout mainLayout;
    @AutoGenerated
    private VerticalLayout vLoginContainer;
    @AutoGenerated
    private VerticalLayout config;
    @AutoGenerated
    private VerticalLayout vServerConf;
    @AutoGenerated
    private HorizontalLayout hSmtp;
    @AutoGenerated
    private CheckBox cSmtpSecure;
    @AutoGenerated
    private TextField tSmtpPort;
    @AutoGenerated
    private TextField tSmtpServer;
    @AutoGenerated
    private HorizontalLayout hImap;
    @AutoGenerated
    private CheckBox cImapSecure;
    @AutoGenerated
    private TextField tImapPort;
    @AutoGenerated
    private TextField tImapServer;
    @AutoGenerated
    private HorizontalLayout hButtons;
    @AutoGenerated
    private Button bLogin;
    @AutoGenerated
    private Button bSettings;
    @AutoGenerated
    private PasswordField fPassword;
    @AutoGenerated
    private TextField fUser;

    private Window window;

    public HupaLoginScreen() {
        buildMainLayout();
        setCompositionRoot(mainLayout);
        bSettings.addClickListener(new ClickListener() {
            public void buttonClick(ClickEvent event) {
                bSettings.setCaption(vServerConf.isVisible() ? "+" : "-");
                vServerConf.setVisible(!vServerConf.isVisible());
            }
        });
        vServerConf.setVisible(false);

        window = new Window("}> Hupa Login");
        window.setModal(false);
        window.setWidth("400px");
        window.setHeight("300px");
        window.setResizable(false);
        window.setContent(this);
        window.setClosable(false);
        window.setDraggable(false);
        window.center();
    }

    @Override
    public void show() {
        UI.getCurrent().setContent(new VerticalLayout());
        UI.getCurrent().addWindow(window);
    }
    @Override
    public void hide() {
        UI.getCurrent().removeWindow(window);
    }
    @Override
    public Button getbLogin() {
        return bLogin;
    }
    @Override
    public PasswordField getfPassword() {
        return fPassword;
    }
    @Override
    public TextField getfUser() {
        return fUser;
    }
    @Override
    public CheckBox getcSmtpSecure() {
        return cSmtpSecure;
    }
    @Override
    public TextField gettSmtpPort() {
        return tSmtpPort;
    }
    @Override
    public TextField gettSmtpServer() {
        return tSmtpServer;
    }
    @Override
    public CheckBox getcImapSecure() {
        return cImapSecure;
    }
    @Override
    public TextField gettImapPort() {
        return tImapPort;
    }
    @Override
    public TextField gettImapServer() {
        return tImapServer;
    }

    @AutoGenerated
    private AbsoluteLayout buildMainLayout() {
        // common part: create layout
        mainLayout = new AbsoluteLayout();
        mainLayout.setImmediate(false);
        mainLayout.setWidth("100%");
        mainLayout.setHeight("100%");

        // top-level component properties
        setWidth("100.0%");
        setHeight("100.0%");

        // vLoginContainer
        vLoginContainer = buildVLoginContainer();
        mainLayout.addComponent(vLoginContainer,
                "top:0.0px;right:0.0px;bottom:0.0px;left:0.0px;");

        return mainLayout;
    }

    @AutoGenerated
    private VerticalLayout buildVLoginContainer() {
        // common part: create layout
        vLoginContainer = new VerticalLayout();
        vLoginContainer.setImmediate(false);
        vLoginContainer.setWidth("100.0%");
        vLoginContainer.setHeight("100.0%");
        vLoginContainer.setMargin(true);
        vLoginContainer.setSpacing(true);

        // fUser
        fUser = new TextField();
        fUser.setCaption("Email");
        fUser.setImmediate(false);
        fUser.setWidth("100.0%");
        fUser.setHeight("-1px");
        vLoginContainer.addComponent(fUser);

        // fPassword
        fPassword = new PasswordField();
        fPassword.setCaption("Password");
        fPassword.setImmediate(false);
        fPassword.setWidth("100.0%");
        fPassword.setHeight("-1px");
        vLoginContainer.addComponent(fPassword);

        // hButtons
        hButtons = buildHButtons();
        vLoginContainer.addComponent(hButtons);

        // config
        config = buildConfig();
        vLoginContainer.addComponent(config);
        vLoginContainer.setExpandRatio(config, 1.0f);

        return vLoginContainer;
    }

    @AutoGenerated
    private HorizontalLayout buildHButtons() {
        // common part: create layout
        hButtons = new HorizontalLayout();
        hButtons.setImmediate(false);
        hButtons.setWidth("100.0%");
        hButtons.setHeight("-1px");
        hButtons.setMargin(false);

        // bSettings
        bSettings = new Button();
        bSettings.setCaption("+");
        bSettings.setImmediate(true);
        bSettings.setWidth("-1px");
        bSettings.setHeight("-1px");
        hButtons.addComponent(bSettings);
        hButtons.setExpandRatio(bSettings, 1.0f);

        // bLogin
        bLogin = new Button();
        bLogin.setCaption("Login");
        bLogin.setImmediate(true);
        bLogin.setWidth("-1px");
        bLogin.setHeight("-1px");
        hButtons.addComponent(bLogin);

        return hButtons;
    }

    @AutoGenerated
    private VerticalLayout buildConfig() {
        // common part: create layout
        config = new VerticalLayout();
        config.setImmediate(false);
        config.setWidth("100.0%");
        config.setHeight("100.0%");
        config.setMargin(false);

        // vServerConf
        vServerConf = buildVServerConf();
        config.addComponent(vServerConf);

        return config;
    }

    @AutoGenerated
    private VerticalLayout buildVServerConf() {
        // common part: create layout
        vServerConf = new VerticalLayout();
        vServerConf.setImmediate(false);
        vServerConf.setWidth("100.0%");
        vServerConf.setHeight("100.0%");
        vServerConf.setMargin(false);

        // hImap
        hImap = buildHImap();
        vServerConf.addComponent(hImap);

        // hSmtp
        hSmtp = buildHSmtp();
        vServerConf.addComponent(hSmtp);

        return vServerConf;
    }

    @AutoGenerated
    private HorizontalLayout buildHImap() {
        // common part: create layout
        hImap = new HorizontalLayout();
        hImap.setImmediate(false);
        hImap.setWidth("100.0%");
        hImap.setHeight("-1px");
        hImap.setMargin(false);
        hImap.setSpacing(true);

        // tImapServer
        tImapServer = new TextField();
        tImapServer.setCaption("IMAP Server");
        tImapServer.setImmediate(false);
        tImapServer.setWidth("100.0%");
        tImapServer.setHeight("-1px");
        hImap.addComponent(tImapServer);
        hImap.setExpandRatio(tImapServer, 1.0f);

        // tImapPort
        tImapPort = new TextField();
        tImapPort.setCaption("IMAP Port");
        tImapPort.setImmediate(false);
        tImapPort.setWidth("5.0em");
        tImapPort.setHeight("-1px");
        hImap.addComponent(tImapPort);

        // cImapSecure
        cImapSecure = new CheckBox();
        cImapSecure.setCaption("Secure");
        cImapSecure.setImmediate(false);
        cImapSecure.setWidth("-1px");
        cImapSecure.setHeight("-1px");
        hImap.addComponent(cImapSecure);
        hImap.setComponentAlignment(cImapSecure, new Alignment(9));

        return hImap;
    }

    @AutoGenerated
    private HorizontalLayout buildHSmtp() {
        // common part: create layout
        hSmtp = new HorizontalLayout();
        hSmtp.setImmediate(false);
        hSmtp.setWidth("100.0%");
        hSmtp.setHeight("-1px");
        hSmtp.setMargin(false);
        hSmtp.setSpacing(true);

        // tSmtpServer
        tSmtpServer = new TextField();
        tSmtpServer.setCaption("SMTP Server");
        tSmtpServer.setImmediate(false);
        tSmtpServer.setWidth("100.0%");
        tSmtpServer.setHeight("-1px");
        hSmtp.addComponent(tSmtpServer);
        hSmtp.setExpandRatio(tSmtpServer, 1.0f);

        // tSmtpPort
        tSmtpPort = new TextField();
        tSmtpPort.setCaption("SMTP Port");
        tSmtpPort.setImmediate(false);
        tSmtpPort.setWidth("5.0em");
        tSmtpPort.setHeight("-1px");
        hSmtp.addComponent(tSmtpPort);

        // cSmtpSecure
        cSmtpSecure = new CheckBox();
        cSmtpSecure.setCaption("Secure");
        cSmtpSecure.setImmediate(false);
        cSmtpSecure.setWidth("-1px");
        cSmtpSecure.setHeight("-1px");
        hSmtp.addComponent(cSmtpSecure);
        hSmtp.setComponentAlignment(cSmtpSecure, new Alignment(9));

        return hSmtp;
    }

}
